{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.0b2", "generated_at": "2025-04-14T03:51:32.688759Z", "invocation_id": "2c1aff3e-c8df-4974-8a61-0b72f57bb735", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-14T03:40:16.442818Z", "completed_at": "2025-04-14T03:40:16.483972Z"}, {"name": "execute", "started_at": "2025-04-14T03:40:16.486310Z", "completed_at": "2025-04-14T03:40:16.936363Z"}], "thread_id": "Thread-1", "execution_time": 0.5018429756164551, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.stock_analysis.stg_stock_data", "compiled": true, "compiled_code": "\n\nSELECT\n    id,\n    symbol,\n    price,\n    volume,\n    change_percent,\n    timestamp,\n    sector,\n    processed_timestamp\nFROM \"stock_analysis\".\"public\".\"raw_stock_data\"", "relation_name": "\"stock_analysis\".\"public\".\"stg_stock_data\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-14T03:40:16.962928Z", "completed_at": "2025-04-14T03:40:16.983165Z"}, {"name": "execute", "started_at": "2025-04-14T03:40:16.985990Z", "completed_at": "2025-04-14T03:40:17.393796Z"}], "thread_id": "Thread-3", "execution_time": 0.4369509220123291, "adapter_response": {"_message": "SELECT 3620", "code": "SELECT", "rows_affected": 3620}, "message": "SELECT 3620", "failures": null, "unique_id": "model.stock_analysis.int_stock_metrics", "compiled": true, "compiled_code": "\n\nWITH daily_metrics AS (\n    SELECT\n        symbol,\n        DATE(timestamp) as trade_date,\n        AVG(price) as avg_price,\n        MAX(price) as high_price,\n        MIN(price) as low_price,\n        -- Remove FIRST_VALUE and LAST_VALUE here, instead calculate in a separate CTE\n        SUM(volume) as daily_volume\n    FROM \"stock_analysis\".\"public\".\"stg_stock_data\"\n    GROUP BY symbol, DATE(timestamp)\n),\n\nopen_close_prices AS (\n    SELECT\n        symbol,\n        DATE(timestamp) as trade_date,\n        FIRST_VALUE(price) OVER (PARTITION BY symbol, DATE(timestamp) ORDER BY timestamp) as open_price,\n        LAST_VALUE(price) OVER (PARTITION BY symbol, DATE(timestamp) ORDER BY timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as close_price\n    FROM \"stock_analysis\".\"public\".\"stg_stock_data\"\n),\n\nvolatility AS (\n    SELECT\n        dm.symbol,\n        dm.trade_date,\n        (dm.high_price - dm.low_price) / ((dm.high_price + dm.low_price) / 2) * 100 as daily_volatility\n    FROM daily_metrics dm\n)\n\nSELECT\n    dm.symbol,\n    dm.trade_date,\n    dm.avg_price,\n    dm.high_price,\n    dm.low_price,\n    op.open_price,\n    op.close_price,\n    dm.daily_volume,\n    vol.daily_volatility,\n    (op.close_price - op.open_price) / op.open_price * 100 as daily_return\nFROM daily_metrics dm\nJOIN open_close_prices op ON dm.symbol = op.symbol AND dm.trade_date = op.trade_date\nJOIN volatility vol ON dm.symbol = vol.symbol AND dm.trade_date = vol.trade_date", "relation_name": "\"stock_analysis\".\"public\".\"int_stock_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-14T03:40:17.419072Z", "completed_at": "2025-04-14T03:40:17.464837Z"}, {"name": "execute", "started_at": "2025-04-14T03:40:17.467301Z", "completed_at": "2025-04-14T03:40:19.329309Z"}], "thread_id": "Thread-2", "execution_time": 1.9203405380249023, "adapter_response": {"_message": "SELECT 10", "code": "SELECT", "rows_affected": 10}, "message": "SELECT 10", "failures": null, "unique_id": "model.stock_analysis.int_sector_analysis", "compiled": true, "compiled_code": "\n\nWITH sector_daily AS (\n    SELECT\n        sector,\n        DATE(timestamp) as trade_date,\n        AVG(price) as sector_avg_price,\n        SUM(volume) as sector_volume,\n        AVG(change_percent) as sector_avg_change\n    FROM \"stock_analysis\".\"public\".\"stg_stock_data\"\n    GROUP BY sector, DATE(timestamp)\n),\n\nsector_volatility AS (\n    SELECT\n        s.sector,\n        m.trade_date,\n        STDDEV(m.daily_volatility) as sector_volatility\n    FROM \"stock_analysis\".\"public\".\"int_stock_metrics\" m\n    JOIN \"stock_analysis\".\"public\".\"stg_stock_data\" s ON m.symbol = s.symbol\n    GROUP BY s.sector, m.trade_date\n)\n\nSELECT\n    sd.sector,\n    sd.trade_date,\n    sd.sector_avg_price,\n    sd.sector_volume,\n    sd.sector_avg_change,\n    sv.sector_volatility,\n    RANK() OVER (PARTITION BY sd.trade_date ORDER BY sd.sector_avg_change DESC) as performance_rank\nFROM sector_daily sd\nLEFT JOIN sector_volatility sv ON sd.sector = sv.sector AND sd.trade_date = sv.trade_date", "relation_name": "\"stock_analysis\".\"public\".\"int_sector_analysis\"", "batch_results": null}], "elapsed_time": 676.8299815654755, "args": {"show_resource_report": false, "partial_parse": true, "select": [], "require_explicit_package_overrides_for_builtin_materializations": true, "require_resource_names_without_spaces": false, "write_json": true, "skip_nodes_if_on_run_start_fails": false, "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt run", "partial_parse_file_diff": true, "quiet": false, "which": "run", "vars": {}, "log_path": "/home/sadhana/stock_analysis_project/logs", "version_check": true, "empty": false, "use_colors": true, "log_file_max_bytes": 10485760, "project_dir": "/home/sadhana/stock_analysis_project", "print": true, "favor_state": false, "log_format": "default", "strict_mode": false, "macro_debugging": false, "state_modified_compare_more_unrendered_values": false, "populate_cache": true, "exclude": [], "indirect_selection": "eager", "log_level_file": "debug", "send_anonymous_usage_stats": true, "static_parser": true, "log_level": "info", "use_colors_file": true, "log_format_file": "debug", "state_modified_compare_vars": false, "defer": false, "introspect": true, "cache_selected_only": false, "profiles_dir": "/home/sadhana/stock_analysis_project", "printer_width": 80, "source_freshness_run_project_hooks": false}}